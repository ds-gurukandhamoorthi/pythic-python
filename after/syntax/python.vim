" we need the conceal feature (vim ‚â• 7.3)
if !has('conceal')
    finish
endif

" remove the keywords. we'll re-add them below
syntax clear pythonOperator

syntax match pythonOperator "\<is\>"

syntax match pyNiceOperator "\<in\>" conceal cchar=‚àà
syntax match pyNiceOperator "\<or\>" conceal cchar=‚à®
syntax match pyNiceOperator "\<and\>" conceal cchar=‚àß
" include the space after ‚Äúnot‚Äù ‚Äì if present ‚Äì so that ‚Äúnot a‚Äù becomes ‚Äú¬¨a‚Äù.
" also, don't hide ‚Äúnot‚Äù behind  ‚Äò¬¨‚Äô if it is after ‚Äúis ‚Äù.
syntax match pyNiceOperator "\%(is \)\@<!\<not\%( \|\>\)" conceal cchar=¬¨
syntax match pyNiceOperator "\<not in\>" conceal cchar=‚àâ
syntax match pyNiceOperator "<=" conceal cchar=‚â§
syntax match pyNiceOperator ">=" conceal cchar=‚â•
" only conceal ‚Äú==‚Äù if alone, to avoid concealing SCM conflict markers
syntax match pyNiceOperator "=\@<!===\@!" conceal cchar=‚â°

" Guru's modifictations
syntax match pyNiceOperator "\<contains\>" conceal cchar=‚àã
syntax match pyNiceOperator "[a-zA-Z)]\zs\[0\]\ze" conceal cchar=‚ÇÄ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[1\]\ze" conceal cchar=‚ÇÅ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[2\]\ze" conceal cchar=‚ÇÇ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[3\]\ze" conceal cchar=‚ÇÉ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[4\]\ze" conceal cchar=‚ÇÑ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[5\]\ze" conceal cchar=‚ÇÖ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[6\]\ze" conceal cchar=‚ÇÜ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[7\]\ze" conceal cchar=‚Çá
syntax match pyNiceOperator "[a-zA-Z)]\zs\[8\]\ze" conceal cchar=‚Çà
syntax match pyNiceOperator "[a-zA-Z)]\zs\[9\]\ze" conceal cchar=‚Çâ
syntax match pyNiceOperator "[a-zA-Z)]\zs\[-1\]\ze" conceal cchar=‚Çã
syntax match pyNiceOperator "!=" conceal cchar=‚â†
syntax match pyNiceOperator "\[a\]" conceal cchar=‚Çê
syntax match pyNiceOperator "\[e\]" conceal cchar=‚Çë
syntax match pyNiceOperator "\[h\]" conceal cchar=‚Çï
syntax match pyNiceOperator "\[i\]" conceal cchar=·µ¢
syntax match pyNiceOperator "\[j\]" conceal cchar=‚±º
syntax match pyNiceOperator "\[k\]" conceal cchar=‚Çñ
syntax match pyNiceOperator "\[l\]" conceal cchar=‚Çó
syntax match pyNiceOperator "\[m\]" conceal cchar=‚Çò
syntax match pyNiceOperator "\[n\]" conceal cchar=‚Çô
syntax match pyNiceOperator "\[o\]" conceal cchar=‚Çí
syntax match pyNiceOperator "\[p\]" conceal cchar=‚Çö
syntax match pyNiceOperator "\[r\]" conceal cchar=·µ£
syntax match pyNiceOperator "\[s\]" conceal cchar=‚Çõ
syntax match pyNiceOperator "\[t\]" conceal cchar=‚Çú
syntax match pyNiceOperator "\[u\]" conceal cchar=·µ§
syntax match pyNiceOperator "\[v\]" conceal cchar=·µ•
syntax match pyNiceOperator "\[x\]" conceal cchar=‚Çì
syntax keyword pyNiceOperator None conceal cchar=‚àÖ
syntax keyword pyNiceOperator yield conceal cchar=‚Ü¢
syntax keyword pyNiceOperator while conceal cchar=‚ü≥
" syntax keyword pyNiceOperator from conceal cchar=‚•∫
syntax keyword pyNiceOperator from conceal cchar=‚äÇ
syntax keyword pyNiceOperator for conceal cchar=‚àÄ
syntax keyword pyNiceOperator if conceal cchar=‚Åá
syntax keyword pyNiceOperator else conceal cchar=‚Äº
syntax keyword pyNiceOperator elif conceal cchar=‚Åâ
syntax keyword pyNiceOperator def conceal cchar=∆í
syntax keyword pyNiceOperator product conceal cchar=‚àè
syntax keyword pyNiceOperator len conceal cchar=‚ç¥
syntax keyword pyNiceOperator shape conceal cchar=‚ç¥
syntax keyword pyNiceOperator reshape conceal cchar=‚ç¥
" syntax keyword pyNiceOperator range conceal cchar=ùï£
syntax keyword pyNiceOperator range conceal cchar=‚Ä¶
syntax keyword pyNiceOperator all conceal cchar=‚àÄ
syntax keyword pyNiceOperator any conceal cchar=‚àÉ
syntax match pyNiceOperator "\<not any\>" conceal cchar=‚àÑ
syntax keyword pyNiceOperator self conceal cchar=@
syntax keyword pyNiceOperator int conceal cchar=‚Ñ§
syntax keyword pyNiceOperator float conceal cchar=‚Ñù
syntax keyword pyNiceOperator str conceal cchar=ùï§
syntax keyword pyNiceOperator set conceal cchar=ùïä
syntax keyword pyNiceOperator tuple conceal cchar=ùïã
syntax keyword pyNiceOperator list conceal cchar=ùïÉ
syntax keyword pyNiceOperator iter conceal cchar=ùïö
syntax keyword pyNiceOperator complex conceal cchar=‚ÑÇ
syntax keyword pyNiceOperator return conceal cchar=‚á¶
syntax keyword pyNiceOperator import conceal cchar=‚á≤
syntax keyword pyNiceOperator print conceal cchar=‚éô
syntax keyword pyNiceOperator abs conceal cchar=|
"enumerating is applying an index i to every ¬® element
"one can think of it as 'indexed'
syntax keyword pyNiceOperator enumerate conceal cchar=œä
syntax keyword pyNiceOperator zip conceal cchar=ùàÑ
syntax keyword pyNiceOperator next conceal cchar=‚â∫
syntax keyword pyNiceOperator True conceal cchar=Ôº¥
syntax keyword pyNiceOperator False conceal cchar=Ôº¶
"returns one result symbolized by the circle
syntax keyword pyNiceOperator join conceal cchar=‚®Å
"returns many values  symbolized by the dots..
syntax keyword pyNiceOperator split conceal cchar=‚Åú
" syntax keyword pyNiceOperator other conceal cchar=√ñ ‚Öã
syntax keyword pyNiceOperator other conceal cchar=—∫
syntax keyword pyNiceOperator assert conceal cchar=‚ä¢
syntax match pyNiceKeyword "\<\%(math\.\)\?exp\>" conceal cchar=‚ÑØ
syntax keyword pyNiceOperator reversed conceal cchar=·¥ô
syntax keyword pyNiceOperator reverse conceal cchar=·¥ô
" syntax keyword pyNiceOperator sorted conceal cchar=‚áÖ
syntax keyword pyNiceOperator sorted conceal cchar=‚ü†
syntax keyword pyNiceStatement help conceal cchar=‚Ñπ
"the inverted ¬ø resembles the symbol d in 'd'escription
syntax keyword pyNiceOperator description conceal cchar=¬ø
" syntax keyword pyNiceOperator min conceal cchar=‚ãÄ
" syntax keyword pyNiceOperator max conceal cchar=‚ãÅ
"As in APL ‚åä‚åà are not visible 
syntax keyword pyNiceOperator min conceal cchar=‚é£
" we would use brackets ‚é°‚é£
syntax keyword pyNiceOperator max conceal cchar=‚é°
"As in APL
syntax keyword pyNiceOperator map conceal cchar=¬®
syntax keyword pyNiceOperator filter conceal cchar=‚ä¢
syntax keyword pyNiceOperator filterfalse conceal cchar=‚ä¨
" the idea of every pair ¬®  reduced to one ‚ç¢ or ≈∏
" or rather the idea of multiple values reduced to one êÖ±
syntax keyword pyNiceOperator reduce conceal cchar=êÖ±
" syntax keyword pyNiceOperator groupby conceal cchar=‚©û
"every element is verified using a criteriion (K) and is put in a group(bin) –∂
"or every element is filtered by criterion to be put in a group(bin) —´
syntax keyword pyNiceOperator groupby conceal cchar=—´
" syntax keyword pyNiceOperator starmap conceal cchar=‚ú™
"As in APL (Though the meaning may differ... in python : map ¬®/starmap‚ç£
syntax keyword pyNiceOperator starmap conceal cchar=‚ç£
syntax keyword pyNiceOperator action conceal cchar=‚ö°
syntax keyword pyNiceOperator res conceal cchar=ùñó
syntax match pyNiceOperator "\<\%(np\.\)\?zeros\>" conceal cchar=ùüò
syntax match pyNiceOperator "\<\%(np\.\)\?ones\>" conceal cchar=ùüô
syntax match pyNiceOperator "\<\%(np\.\)\?array\>" conceal cchar=ùî∏
syntax match pyNiceOperator "\<\%(np\.\)\?dot\>" conceal cchar=‚Ä¢
syntax match pyNiceOperator "\<\%(np\.\)\?arange\>" conceal cchar=‚Ä¶
syntax keyword pyNiceOperator read conceal cchar=‚áß
syntax keyword pyNiceOperator imread conceal cchar=‚áß
syntax match pyNiceOperator "\<\%(pd\.\)\?read" conceal cchar=‚áß
syntax keyword pyNiceOperator write conceal cchar=‚á©
syntax keyword pyNiceOperator imsave conceal cchar=‚á©
syntax keyword pyNiceOperator args conceal cchar=ùñÜ
syntax match pyNiceOperator "\<\%(sys\.\)\?argv\>" conceal cchar=ùñÜ
syntax keyword pyNiceOperator takewhile conceal cchar=‚§â
syntax keyword pyNiceOperator dropwhile conceal cchar=‚§à
syntax keyword pyNiceOperator combinations conceal cchar=ùìí
syntax keyword pyNiceOperator permutations conceal cchar=ùëÉ
syntax keyword pyNiceOperator islice conceal cchar=‚ü¶
syntax match pyNiceOperator "\<\%(math\.\)\?log\>" conceal cchar=‚Ñì
syntax match pyNiceOperator "\(\*\*\)a\ze\_W" conceal cchar=·µÉ
syntax match pyNiceOperator "\(\*\*\)b\ze\_W" conceal cchar=·µá
syntax match pyNiceOperator "\(\*\*\)c\ze\_W" conceal cchar=·∂ú
syntax match pyNiceOperator "\(\*\*\)d\ze\_W" conceal cchar=·µà
syntax match pyNiceOperator "\(\*\*\)e\ze\_W" conceal cchar=·µâ
syntax match pyNiceOperator "\(\*\*\)f\ze\_W" conceal cchar=·∂†
syntax match pyNiceOperator "\(\*\*\)g\ze\_W" conceal cchar=·µç
syntax match pyNiceOperator "\(\*\*\)h\ze\_W" conceal cchar= ∞
syntax match pyNiceOperator "\(\*\*\)i\ze\_W" conceal cchar=‚Å±
syntax match pyNiceOperator "\(\*\*\)j\ze\_W" conceal cchar= ≤
syntax match pyNiceOperator "\(\*\*\)k\ze\_W" conceal cchar=·µè
syntax match pyNiceOperator "\(\*\*\)l\ze\_W" conceal cchar=À°
syntax match pyNiceOperator "\(\*\*\)m\ze\_W" conceal cchar=·µê
syntax match pyNiceOperator "\(\*\*\)n\ze\_W" conceal cchar=‚Åø
syntax match pyNiceOperator "\(\*\*\)o\ze\_W" conceal cchar=·µí
syntax match pyNiceOperator "\(\*\*\)p\ze\_W" conceal cchar=·µñ
syntax match pyNiceOperator "\(\*\*\)r\ze\_W" conceal cchar= ≥
syntax match pyNiceOperator "\(\*\*\)s\ze\_W" conceal cchar=À¢
syntax match pyNiceOperator "\(\*\*\)t\ze\_W" conceal cchar=·µó
syntax match pyNiceOperator "\(\*\*\)u\ze\_W" conceal cchar=·µò
syntax match pyNiceOperator "\(\*\*\)v\ze\_W" conceal cchar=·µõ
syntax match pyNiceOperator "\(\*\*\)w\ze\_W" conceal cchar= ∑
syntax match pyNiceOperator "\(\*\*\)x\ze\_W" conceal cchar=À£
syntax match pyNiceOperator "\(\*\*\)y\ze\_W" conceal cchar= ∏
syntax match pyNiceOperator "\(\*\*\)z\ze\_W" conceal cchar=·∂ª
syntax match pyNiceOperator "\(\*\*\)0\ze\_W" conceal cchar=‚Å∞
syntax match pyNiceOperator "\(\*\*\)1\ze\_W" conceal cchar=¬π
syntax match pyNiceOperator "\(\*\*\)2\ze\_W" conceal cchar=¬≤
syntax match pyNiceOperator "\(\*\*\)3\ze\_W" conceal cchar=¬≥
syntax match pyNiceOperator "\(\*\*\)4\ze\_W" conceal cchar=‚Å¥
syntax match pyNiceOperator "\(\*\*\)5\ze\_W" conceal cchar=‚Åµ
syntax match pyNiceOperator "\(\*\*\)6\ze\_W" conceal cchar=‚Å∂
syntax match pyNiceOperator "\(\*\*\)7\ze\_W" conceal cchar=‚Å∑
syntax match pyNiceOperator "\(\*\*\)8\ze\_W" conceal cchar=‚Å∏
syntax match pyNiceOperator "\(\*\*\)9\ze\_W" conceal cchar=‚Åπ
syntax keyword pyNiceOperator most_common conceal cchar=‚àá
" syntax keyword pyNiceOperator Exception conceal cchar=‚ö†
syntax keyword pyNiceOperator Exception conceal cchar=‚ùó
"resembles speed bump
syntax keyword pyNiceOperator raise conceal cchar=‚âè
syntax keyword pyNiceOperator count conceal cchar=ÔºÉ
syntax keyword pyNiceOperator Counter conceal cchar=ÔºÉ
" syntax keyword pyNiceOperator items conceal cchar=Ôºä
" syntax keyword pyNiceOperator keys conceal cchar=‚üú
" syntax keyword pyNiceOperator values conceal cchar=‚ä∏
syntax keyword pyNiceOperator values conceal cchar=Ôºä
" syntax keyword pyNiceOperator keys conceal cchar=‚òå
syntax keyword pyNiceOperator keys conceal cchar=‚ö∑
syntax keyword pyNiceOperator items conceal cchar=‚òç
syntax keyword pyNiceOperator repeat conceal cchar=‚Üª
syntax keyword pyNiceOperator cycle conceal cchar=‚•Å
syntax keyword pyNiceOperator compress conceal cchar=‚®ù
syntax keyword pyNiceOperator tee conceal cchar=¬¶
" as in APL
syntax match pyNiceOperator "\<\%(random\.\)\?sample\>" conceal cchar=‚ç∞
syntax keyword pyNiceOperator xs conceal cchar=·∫å
syntax keyword pyNiceOperator ys conceal cchar=≈∏
syntax keyword pyNiceOperator ts conceal cchar=·∫ó
" as in APL
syntax match pyNiceOperator "\<\%(re\.\)\?search\>" conceal cchar=‚ç∑
" as in Haskell
syntax keyword pyNiceOperator isinstance conceal cchar=‚à∑
" syntax keyword pyNiceOperator line conceal cchar=‚àí
syntax keyword pyNiceOperator lines conceal cchar=‚â£
" syntax keyword pyNiceOperator word conceal cchar=‚´æ
syntax keyword pyNiceOperator words conceal cchar=‚´º
syntax keyword pyNiceOperator columns conceal cchar=‚´º
syntax match pyNiceOperator "\<nb_" conceal cchar=·¥∫
syntax match pyNiceOperator "_count\>" conceal cchar=#
syntax keyword pyNiceOperator strip conceal cchar=Ô∏∫
syntax keyword pyNiceOperator encode conceal cchar=‚≠≥
syntax keyword pyNiceOperator decode conceal cchar=‚≠±
syntax keyword pyNiceOperator replace conceal cchar=‚áù
syntax match pyNiceOperator "\<\%(re\.\)\?sub\>" conceal cchar=‚áù
syntax keyword pyNiceOperator group conceal cchar=…†
syntax keyword pyNiceOperator or_ conceal cchar=‚à®
syntax keyword pyNiceOperator and_ conceal cchar=‚àß
syntax keyword pyNiceOperator not_ conceal cchar=¬¨
syntax keyword pyNiceOperator union conceal cchar=‚à™
syntax keyword pyNiceOperator intersection conceal cchar=‚à©
syntax keyword pyNiceOperator T conceal cchar=·µÄ
syntax keyword pyNiceOperator transpose conceal cchar=·µÄ
syntax keyword pyNiceOperator maximum conceal cchar=‚é°
syntax keyword pyNiceOperator minimum conceal cchar=‚é£
syntax keyword pyNiceOperator ceil conceal cchar=‚åà
syntax keyword pyNiceOperator floor conceal cchar=‚åä
syntax keyword pyNiceOperator round conceal cchar=‚âà
syntax keyword pyNiceOperator mean conceal cchar=Œº
syntax keyword pyNiceOperator std conceal cchar=œÉ
syntax keyword pyNiceOperator cumsum conceal cchar=ùù®
syntax keyword pyNiceOperator cumprod conceal cchar=ùù•
syntax match pyNiceOperator "\<\%(random\.\)\?randrange\>" conceal cchar=∆¶
syntax match pyNiceOperator "\<\%(np\.random\.\)\?randn\>" conceal cchar=‚ç∞
syntax match pyNiceOperator " @ " conceal cchar=‚Ä¢
syntax keyword pyNiceOperator index conceal cchar=‚ö∑
syntax keyword pyNiceOperator index_col conceal cchar=‚ö∑
syntax keyword pyNiceOperator isin conceal cchar=‚ãµ
syntax keyword pyNiceOperator iloc conceal cchar=‚ü¶
syntax keyword pyNiceOperator loc conceal cchar=‚¶É
syntax keyword pyNiceOperator copy conceal cchar=‚éò
syntax match pyNiceKeyword "\<ascending=True\>" conceal cchar=‚Üó
syntax match pyNiceKeyword "\<ascending=False\>" conceal cchar=‚Üò
syntax match pyNiceOperator "\<\%(np\.\)\?nan\>" conceal cchar=·¥é
" we create an intersection ^ of unique elements
" syntax keyword pyNiceOperator unique conceal cchar=√ª
" no two elements are repeated
syntax keyword pyNiceOperator unique conceal cchar=∆ª
syntax keyword pyNiceOperator is_unique conceal cchar=∆ª
syntax keyword pyNiceOperator diff conceal cchar=Œî
syntax keyword pyNiceOperator sep conceal cchar=‚ê£
syntax match pyNiceKeyword "\<inplace=True\>" conceal cchar=ÔºÅ
syntax match pyNiceKeyword "\<\%(time\.\)\?sleep\>" conceal cchar=‚åõ
" The order of the following two elements are important
syntax match pyNiceKeyword "\<find_element" conceal cchar=ùüô
syntax match pyNiceKeyword "\<find_elements" conceal cchar=Ôºä
syntax match pyNiceKeyword "\<get_attribute\>" conceal cchar=‚à∑
syntax match pyNiceKeyword "by_id\>" conceal cchar=#

syntax keyword pyNiceOperator sum conceal cchar=‚àë
syntax match pyNiceOperator "\<\%(math\.\)\?sqrt\>" conceal cchar=‚àö
syntax match pyNiceKeyword "\<\%(math\.\)\?pi\>" conceal cchar=œÄ

syntax keyword pyNiceStatement lambda conceal cchar=Œª

hi link pyNiceOperator Operator
hi link pyNiceStatement Statement
hi link pyNiceKeyword Keyword
hi! link Conceal Operator

setlocal conceallevel=1
